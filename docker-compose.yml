version: '3.8'
services:
    db:
        image: mysql:8.0
        container_name: quickmart-db
        environment:
            MYSQL_ROOT_PASSWORD: rootpassword
            MYSQL_DATABASE: quickmart
            MYSQL_USER: user
            MYSQL_PASSWORD: 123
        ports:
            - "3306:3306"
        volumes:
            - db_data:/var/lib/mysql
            - ./db:/docker-entrypoint-initdb.d
        networks:
            - quickmart-network
        healthcheck:
            test: ["CMD-SHELL", "mysqladmin ping -hlocalhost -uroot -prootpassword"]
            interval: 10s
            retries: 5
            start_period: 30s
            timeout: 5s
        deploy:
            resources:
                limits:
                    cpus: "0.5"
                    memory: 512M

    backend:
        image: openjdk:17-jdk
        container_name: quickmart-backend
        build:
            context: .
            dockerfile: Dockerfile
        ports:
            - "8080:8080"
        environment:
            - API_KEY=${API_KEY}
            - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL}
            - SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME}
            - SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
            - SPRING_DATASOURCE_DRIVER_CLASS_NAME=${SPRING_DATASOURCE_DRIVER_CLASS_NAME}
            - SPRING_JPA_HIBERNATE_DDL_AUTO=${SPRING_JPA_HIBERNATE_DDL_AUTO}
            - SPRING_REDIS_HOST=redis  # <- Nueva configuración para Redis
            - SPRING_REDIS_PORT=6379   # <- Nueva configuración para Redis
        depends_on:
            db:
                condition: service_healthy
            redis:                      # <- Agrega Redis como dependencia
                condition: service_healthy
        networks:
            - quickmart-network
        command: ["sh", "-c", "until nc -z db 3306; do echo 'Esperando a MySQL...'; sleep 3; done; java -jar /app/QuickMart.jar"]
        deploy:
            resources:
                limits:
                    cpus: "0.5"
                    memory: 512M


    redis:
        image: redis:7-alpine
        container_name: quickmart-redis
        ports:
            - "6379:6379"
        networks:
            - quickmart-network
        deploy:
            resources:
                limits:
                    cpus: "0.25"
                    memory: 256M
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            interval: 10s
            retries: 3
            start_period: 5s
            timeout: 5s

    frontend:
        build:
            context: ./frontend
            dockerfile: Dockerfile
        ports:
            - "3000:3000"
        networks:
            - quickmart-network
        deploy:
            resources:
                limits:
                    cpus: "0.5"
                    memory: 512M



    mongodb:
        image: mongo
        container_name: mongodb
        ports:
            - "27017:27017"
        volumes:
            - ./data/db:/data/db
        networks:
            - quickmart-network
        deploy:
            resources:
                limits:
                    cpus: "0.5"
                    memory: 512M



volumes:
    db_data:
    mongodb_data:

networks:
    quickmart-network:
        driver: bridge

